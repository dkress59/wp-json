name: Build and Release

on:
  push:
    branches:
      - main
      - develop
    paths:
      - "docker/**"
      - "src/**"
      - ".github/workflows/build-release.yml"
      - ".yarnrc.yml"
      - "docker-compose.yml"
      - "yarn.lock"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Check/restore yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Build WordPress
        run: docker-compose up -d
      - name: Wait for DB import
        run: until curl -s "http://localhost:8080" | grep -q "WordPress REST Typings"; do printf "waiting...\n"; sleep 10; done; printf "DB is up"
      - name: Install Node.js dependencies
        run: yarn
      - name: Generate the typings
        run: yarn build
      - name: Zip dist (test)
        run: zip -r wp-json-types.zip dist
      - name: Upload artifacts (test)
        uses: actions/upload-artifact@v2
        with:
          name: wp-json-types
          path: ./*.zip
